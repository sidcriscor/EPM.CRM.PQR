///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace EPM.CRM.PQR.Funcionalidad001_Inicio
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SeleccionarEquipoProcesoCausa recording.
    /// </summary>
    [TestModule("51a53205-1906-4eb4-9a96-4110c5bf2b26", ModuleType.Recording, 1)]
    public partial class SeleccionarEquipoProcesoCausa : ITestModule
    {
        /// <summary>
        /// Holds an instance of the EPM.CRM.PQR.EPM_CRM_PQRRepository repository.
        /// </summary>
        public static EPM.CRM.PQR.EPM_CRM_PQRRepository repo = EPM.CRM.PQR.EPM_CRM_PQRRepository.Instance;

        static SeleccionarEquipoProcesoCausa instance = new SeleccionarEquipoProcesoCausa();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SeleccionarEquipoProcesoCausa()
        {
            vEquipoProceso = "Servicio al cliente";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SeleccionarEquipoProcesoCausa Instance
        {
            get { return instance; }
        }

#region Variables

        string _vEquipoProceso;

        /// <summary>
        /// Gets or sets the value of variable vEquipoProceso.
        /// </summary>
        [TestVariable("3c991171-27ac-4cdd-a21c-1f27f9f15752")]
        public string vEquipoProceso
        {
            get { return _vEquipoProceso; }
            set { _vEquipoProceso = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(0));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute InnerText to '$vEquipoProceso' on item 'CasoNuevoCaso.ContentIFrame1.EpmPqrteamprocessLedit'.", repo.CasoNuevoCaso.ContentIFrame1.EpmPqrteamprocessLeditInfo, new RecordItemIndex(1));
            repo.CasoNuevoCaso.ContentIFrame1.EpmPqrteamprocessLedit.Element.SetAttributeValue("InnerText", vEquipoProceso);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(2));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}{Up}'.", new RecordItemIndex(3));
            Keyboard.Press("{Down}{Up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(4));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Demora en atender Petición'.", new RecordItemIndex(5));
            Keyboard.Press("Demora en atender Petición");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(6));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}{Up}'.", new RecordItemIndex(7));
            Keyboard.Press("{Down}{Up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(8));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
